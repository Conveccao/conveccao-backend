{
  "swagger": "2.0",
  "info": {
    "description": "Documentação do repositório destinado aos arquivos desenvolvidos da plataforma de disseminação de dados Convecção, para a Aprendizagem por Projetos Integrados da FATEC Profº. Jessen Vidal de São José Dos Campos, no 4º semestre de Desenvolvimento de Software Multiplataforma. OBS: Nos encorajamos que ultilize o insominia para teste das rotas, removendo o () em cada rota.",
    "version": "1.0.0",
    "title": "Conveccção",
    "contact": {
      "email": "conveccao.4dsm@gmail.com"
    },
    "license": {
      "name": "MIT license",
      "url": "https://github.com/Conveccao/conveccao-documentacao"
    }
  },
  "host": "app.vercel",
  "tags": [
    {
      "name": "Estações",
      "description": "Operações relacionados as estações"
    },
    {
      "name": "Parametros",
      "description": "Operações relacionadas aos Parametros"
    },
    {
      "name": "Usuarios",
      "description": "Operações relacionadas aos Usuarios"
    },
    {
      "name": "Valores",
      "description": "Operações relacionadas aos Valores recebidos"
    }
  ],
  "schemes": [
    "http"
  ],
  "paths": {
    "/stations": {
      "get": {
        "tags": [
          "Estações"
        ],
        "summary": "Busca todos as estações registradas na plataforma",
        "description": "Ultiliza a requisição Get para mostrar todos os chamados existentes.Remova os parenteses() para utilizar.",
        "operationId": "getEstacoes",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "302": {
            "description": "retorna as estações registradas",
            "schema": {
              "$ref": "#/definitions/Parameters"
            }
          }
        }
      }
    },
    "/stations/:id": {
      "get": {
        "tags": [
          "Estações"
        ],
        "summary": "Busca todos as estações registradas na plataforma",
        "description": "Ultiliza a requisição Get para mostrar todos os chamados existentes. Remova os parenteses() para utilizar.",
        "operationId": "getEstacoesiD",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "302": {
            "description": "retorna as estações registradas",
            "schema": {
              "$ref": "#/definitions/Station"
            }
          }
        }
      }
    },
    "/stations(create)": {
      "post": {
        "tags": [
          "Estações"
        ],
        "summary": "Cadastra uma estação no banco de dados",
        "description": "registra uma estações e seus parametros no banco de dados. Remova os parenteses() para utilizar.",
        "operationId": "registerestacoes",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "List of user object",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Station"
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "A estação foi cadastrada com sucesso"
          }
        }
      }
    },
    "/station/:id (update)": {
      "put": {
        "tags": [
          "Estações"
        ],
        "summary": "Atualiza os dados de uma estação",
        "description": "Atualiza os dados de uma estação já cadastrada, alterando os dados solicitados",
        "operationId": "AtualizarEstacoes",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "dados que serão atualizados",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Station"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "retorna a estação com os dados alterados"
          }
        }
      }
    },
    "/stations/:id (delete)": {
      "delete": {
        "tags": [
          "Estações"
        ],
        "summary": "Deleta uma estação",
        "description": "através da id, remove uma estação cadastrada no banco de dados da aplicação",
        "operationId": "deleteEstacao",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ID da estação",
            "in": "body",
            "description": "Id da Estação que será deleta",
            "required": true,
            "schema": {
              "items": {
                "$ref": "#/definitions/Parameters"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "ID de estação inválido"
          },
          "404": {
            "description": "Chamado not found"
          }
        }
      }
    },
    "/Types": {
      "post": {
        "tags": [
          "Parametros"
        ],
        "summary": "Cadastra o tipo de um parametro",
        "description": "Define qual o tipo de um parametro que foi cadastradado",
        "operationId": "typeSensor",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ParameterType"
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "A estação foi cadastrada com sucesso"
          }
        }
      }
    },
    "/parameterTypes(get)": {
      "get": {
        "tags": [
          "Parametros"
        ],
        "summary": "Traz todos os parametro cadastrados na plataforma por tipo",
        "description": "Retorna todos os sensores que possuem um mesmo tipo, cadastrado na plataforma",
        "operationId": "GetSensorType",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ParameterType"
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Retorna todas as estações cadastradas com sucesso"
          }
        }
      }
    },
    "/parameters": {
      "post": {
        "tags": [
          "Parametros"
        ],
        "summary": "Cadastra um parametro no banco de dados",
        "description": "envia os dados de um parametro para serem registrados em um banco de dados.",
        "operationId": "RegisterParameter",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Parameters"
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "O Parametro foi cadastrado com sucesso"
          }
        }
      }
    },
    "/parameters(get)": {
      "get": {
        "tags": [
          "Parametros"
        ],
        "summary": "Retorna de maneira geral todos os parametros cadastrados.",
        "description": "Retorna, de maneira geral, todos os sensores que estiverem cadastrados na plataforma e todos as suas informações.",
        "operationId": "GetParameters",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Parameters"
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Retonará todos os Parametros cadastrados"
          }
        }
      }
    },
    "/parameters/:id": {
      "get": {
        "tags": [
          "Parametros"
        ],
        "summary": "Busca um determinado um parametro especifico registrado",
        "description": "Ultiliza a requisição Get para retornar um sensor por ID.",
        "operationId": "getParametrosiD",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "302": {
            "description": "retorna os Parametros registradas",
            "schema": {
              "$ref": "#/definitions/Parameters"
            }
          }
        }
      }
    },
    "/parameters/:id (delete)": {
      "delete": {
        "tags": [
          "Parametros"
        ],
        "summary": "Deleta um parametro",
        "description": "através da id, remove um sensor cadastrado no banco de dados da aplicação",
        "operationId": "deleteParameter",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ID do Parametro",
            "in": "body",
            "description": "Id do Parametro que será deleta",
            "required": true,
            "schema": {
              "items": {
                "$ref": "#/definitions/ParameterID"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "ID de Parametro inválido"
          },
          "404": {
            "description": "Chamado not found"
          }
        }
      }
    },
    "/parameter/:id (update)": {
      "put": {
        "tags": [
          "Parametros"
        ],
        "summary": "Atualiza os dados de um parametro",
        "description": "Atualiza os dados de um Sensor já cadastrado, alterando os dados solicitados",
        "operationId": "AtualizarParametros",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Dados que serão atualizados",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ParameterID"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "retorna o Parametro com os dados alterados"
          }
        }
      }
    },
    "/user": {
      "post": {
        "tags": [
          "Usuarios"
        ],
        "summary": "Cadastra um usuario no banco de dados",
        "description": "registra uma estações e seus parametros no banco de dados. Remova os parenteses() para utilizar.",
        "operationId": "registerUser",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "List of user object",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Station"
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "O usuario foi cadastrada com sucesso"
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": [
          "Usuarios"
        ],
        "summary": "Busca um determinado um parametro especifico registrado",
        "description": "Ultiliza a requisição Get para retornar um usuario por ID.",
        "operationId": "getUsersiD",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "302": {
            "description": "retorna os Parametros registradas",
            "schema": {
              "$ref": "#/definitions/Parameters"
            }
          }
        }
      }
    },
    "/user-exists": {
      "post": {
        "tags": [
          "Usuarios"
        ],
        "summary": "Cadastra um usuario no banco de dados",
        "description": ".",
        "operationId": "User",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "List of user object",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Station"
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "O usuario foi cadastrada com sucesso"
          }
        }
      }
    },
    "/login": {
      "post": {
        "tags": [
          "Usuarios"
        ],
        "summary": "Loga o usuario no banco de dados",
        "description": "o",
        "operationId": "login",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "List of user object",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Station"
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "O usuario fez Login com sucesso"
          }
        }
      }
    },
    "/user/:id": {
      "delete": {
        "tags": [
          "Usuarios"
        ],
        "summary": "Deleta um Usuario",
        "description": "através da id, remove uma estação cadastrada no banco de dados da aplicação",
        "operationId": "deleteUser",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ID da estação",
            "in": "body",
            "description": "Id da Estação que será deleta",
            "required": true,
            "schema": {
              "items": {
                "$ref": "#/definitions/EstacaoID"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "ID de estação inválido"
          },
          "404": {
            "description": "Chamado not found"
          }
        }
      }
    },
    "/update-user/:id": {
      "put": {
        "tags": [
          "Usuarios"
        ],
        "summary": "Atualiza os dados de uma estação",
        "description": "Atualiza os dados de uma estação já cadastrada, alterando os dados solicitados",
        "operationId": "Atualizar",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "dados que serão atualizados",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "retorna a estação com os dados alterados"
          }
        }
      }
    },
    "/profile": {
      "get": {
        "tags": [
          "Usuarios"
        ],
        "summary": "Busca todos os usuarios registrados na plataforma",
        "description": "Ultiliza a requisição Get para mostrar todos os chamados existentes.Remova os parenteses() para utilizar.",
        "operationId": "getUsuarios",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "302": {
            "description": "retorna as estações registradas"
          }
        }
      }
    },
    "/createValue": {
      "post": {
        "tags": [
          "Valores"
        ],
        "summary": "Cadastra uma rota no banco de dados",
        "description": "registra uma estações e seus parametros no banco de dados. Remova os parenteses() para utilizar.",
        "operationId": "registerRotes",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "List of user object",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Station"
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "A estação foi cadastrada com sucesso"
          }
        }
      }
    },
    "/readAllValues": {
      "get": {
        "tags": [
          "Valores"
        ],
        "summary": "Busca todos as estações registradas na plataforma",
        "description": "Ultiliza a requisição Get para mostrar todos os chamados existentes.Remova os parenteses() para utilizar.",
        "operationId": "getRotas",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "302": {
            "description": "retorna as estações registradas",
            "schema": {
              "$ref": "#/definitions/Parameters"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "number"
        },
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "photo": {
          "type": "string"
        },
        "role": {
          "type": "string"
        }
      }
    },
    "UserEmail": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        }
      }
    },
    "Station": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "photo": {
          "type": "number"
        },
        "role": {
          "type": "string"
        }
      }
    },
    "UserID": {
      "type": "object",
      "properties": {
        "id": {
          "type": "number"
        }
      }
    },
    "Parameters": {
      "type": "object",
      "properties": {
        "id": {
          "type": "number"
        },
        "instalation_date": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "lat": {
          "type": "number"
        },
        "lon": {
          "type": "number"
        },
        "reference": {
          "type": "string"
        }
      }
    },
    "EstacaoID": {
      "type": "object",
      "properties": {
        "id": {
          "type": "number"
        }
      }
    },
    "ParameterType": {
      "type": "object",
      "properties": {
        "tipo": {
          "type": "string"
        },
        "id": {
          "type": "number"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "unit1": {
          "type": "string"
        },
        "factor1": {
          "type": "number"
        },
        "offset1": {
          "type": "number"
        },
        "unit2": {
          "type": "string"
        },
        "factor2": {
          "type": "number"
        },
        "offset2": {
          "type": "number"
        },
        "reference": {
          "type": "string"
        },
        "min": {
          "type": "string"
        },
        "max": {
          "type": "string"
        }
      }
    },
    "ParameterID": {
      "type": "number"
    }
  },
  "externalDocs": {
    "description": "Conheça a Convecção",
    "url": "https://github.com/Conveccao"
  }
}